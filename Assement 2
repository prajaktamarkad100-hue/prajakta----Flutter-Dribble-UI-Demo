
import 'package:flutter/material.dart';

void main() { runApp(const PlantStoreApp()); }

class PlantStoreApp extends StatelessWidget { const PlantStoreApp({super.key});

@override Widget build(BuildContext context) { return MaterialApp( debugShowCheckedModeBanner: false, title: 'Plant Store', theme: ThemeData( useMaterial3: true, colorSchemeSeed: const Color(0xFF2E7D32), fontFamily: 'Roboto', ), home: const HomeScreen(), ); } }

// ----------------------------- MODELS & DATA --------------------------------- class Plant { final String id; final String name; final String type; // e.g., "Indoor", "Outdoor" final String category; // e.g., "Popular", "Top Pick" final double price; final String imageUrl; final String description; final int light; // 1..5 final int water; // 1..5 final int temperature; // in °C preferred

const Plant({ required this.id, required this.name, required this.type, required this.category, required this.price, required this.imageUrl, required this.description, required this.light, required this.water, required this.temperature, }); }

const categories = ["Popular", "Outdoor", "Indoor", "Top Pick"];

final samplePlants = <Plant>[ const Plant( id: 'p1', name: 'Monstera Deliciosa', type: 'Indoor', category: 'Popular', price: 24.90, imageUrl: 'https://images.unsplash.com/photo-1593697820676-6c44c2b5d2d6?q=80&w=800&auto=format&fit=crop', description: 'Monstera Deliciosa is a tropical plant known for its dramatic split leaves. Easy-care and perfect for bright, indirect light.', light: 4, water: 3, temperature: 22, ), const Plant( id: 'p2', name: 'Snake Plant', type: 'Indoor', category: 'Top Pick', price: 18.50, imageUrl: 'https://images.unsplash.com/photo-1621271844313-7a7b2cc61b64?q=80&w=800&auto=format&fit=crop', description: 'Snake Plant (Sansevieria) thrives on neglect, tolerates low light, and purifies the air. A must-have for beginners.', light: 2, water: 2, temperature: 24, ), const Plant( id: 'p3', name: 'Areca Palm', type: 'Outdoor', category: 'Popular', price: 34.00, imageUrl: 'https://images.unsplash.com/photo-1593697820800-8f1f9fd671c3?q=80&w=800&auto=format&fit=crop', description: 'Areca Palm brings tropical vibes with lush fronds. Loves bright light and regular watering when the topsoil dries.', light: 5, water: 3, temperature: 26, ), const Plant( id: 'p4', name: 'Peace Lily', type: 'Indoor', category: 'Indoor', price: 19.99, imageUrl: 'https://images.unsplash.com/photo-1598899134739-24c46f58b8c8?q=80&w=800&auto=format&fit=crop', description: 'Peace Lily offers elegant white blooms and thrives in shaded spots. Keep soil consistently moist for best results.', light: 3, water: 4, temperature: 23, ), const Plant( id: 'p5', name: 'Aloe Vera', type: 'Outdoor', category: 'Top Pick', price: 14.20, imageUrl: 'https://images.unsplash.com/photo-1603072389012-7586d81d6c8e?q=80&w=800&auto=format&fit=crop', description: 'Aloe Vera is a hardy succulent with soothing gel-filled leaves. Loves bright light and infrequent watering.', light: 5, water: 1, temperature: 28, ), ];

// ----------------------------- HOME SCREEN ------------------------------------ class HomeScreen extends StatefulWidget { const HomeScreen({super.key});

@override State<HomeScreen> createState() => _HomeScreenState(); }

class _HomeScreenState extends State<HomeScreen> { int selectedCategoryIndex = 0;

@override Widget build(BuildContext context) { final selectedCategory = categories[selectedCategoryIndex]; final filtered = samplePlants .where((p) => selectedCategory == 'Popular' ? true : p.category.toLowerCase() == selectedCategory.toLowerCase()) .toList();

return Scaffold(
  appBar: AppBar(
    title: const Text('Plant Store'),
    leading: IconButton(
      icon: const Icon(Icons.menu),
      onPressed: () {},
    ),
    actions: [
      IconButton(
        icon: const Badge(label: Text('2'), child: Icon(Icons.shopping_bag)) ,
        onPressed: () {},
      ),
    ],
  ),
  body: CustomScrollView(
    slivers: [
      SliverToBoxAdapter(
        child: Padding(
          padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 8),
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              Text(
                'Hello Mia',
                style: Theme.of(context)
                    .textTheme
                    .headlineMedium
                    ?.copyWith(fontWeight: FontWeight.w700),
              ),
              const SizedBox(height: 4),
              Text(
                'Find your perfect plant',
                style: Theme.of(context).textTheme.bodyLarge,
              ),
              const SizedBox(height: 16),
              // Search Bar (static)
              TextField(
                decoration: InputDecoration(
                  hintText: 'Search plants',
                  prefixIcon: const Icon(Icons.search),
                  filled: true,
                  enabled: false, // static for assignment
                  fillColor: Theme.of(context).colorScheme.surfaceContainer,
                  border: OutlineInputBorder(
                    borderRadius: BorderRadius.circular(16),
                    borderSide: BorderSide.none,
                  ),
                ),
              ),
              const SizedBox(height: 16),
              SizedBox(
                height: 40,
                child: ListView.separated(
                  scrollDirection: Axis.horizontal,
                  itemCount: categories.length,
                  separatorBuilder: (_, __) => const SizedBox(width: 8),
                  itemBuilder: (context, i) {
                    final isSelected = selectedCategoryIndex == i;
                    return ChoiceChip(
                      label: Text(categories[i]),
                      selected: isSelected,
                      onSelected: (_) => setState(() {
                        selectedCategoryIndex = i;
                      }),
                    );
                  },
                ),
              ),
              const SizedBox(height: 16),
              // Free shipping banner
              Container(
                padding: const EdgeInsets.all(16),
                decoration: BoxDecoration(
                  color: Theme.of(context).colorScheme.secondaryContainer,
                  borderRadius: BorderRadius.circular(20),
                ),
                child: Row(
                  children: [
                    const Icon(Icons.local_shipping, size: 40),
                    const SizedBox(width: 12),
                    Expanded(
                      child: Column(
                        crossAxisAlignment: CrossAxisAlignment.start,
                        children: const [
                          Text(
                            'Free Shipping',
                            style: TextStyle(fontSize: 16, fontWeight: FontWeight.w700),
                          ),
                          SizedBox(height: 4),
                          Text('On orders over ₹999. Limited time offer.'),
                        ],
                      ),
                    ),
                    const Icon(Icons.arrow_forward_ios, size: 16),
                  ],
                ),
              ),
              const SizedBox(height: 12),
            ],
          ),
        ),
      ),

      // Grid of plant cards
      SliverPadding(
        padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 8),
        sliver: SliverGrid(
          gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
            crossAxisCount: 2,
            mainAxisSpacing: 12,
            crossAxisSpacing: 12,
            childAspectRatio: 0.72,
          ),
          delegate: SliverChildBuilderDelegate(
            (context, index) {
              final plant = filtered[index];
              return PlantCard(plant: plant);
            },
            childCount: filtered.length,
          ),
        ),
      ),
    ],
  ),
);

} }

class PlantCard extends StatelessWidget { final Plant plant; const PlantCard({super.key, required this.plant});

@override Widget build(BuildContext context) { return InkWell( onTap: () { Navigator.of(context).push( PageRouteBuilder( transitionDuration: const Duration(milliseconds: 450), pageBuilder: (_, __, __) => DetailsScreen(plant: plant), ), ); }, child: Container( decoration: BoxDecoration( color: Theme.of(context).colorScheme.surface, borderRadius: BorderRadius.circular(20), boxShadow: [ BoxShadow( color: Colors.black.withOpacity(0.05), blurRadius: 10, offset: const Offset(0, 6), ), ], ), child: Column( crossAxisAlignment: CrossAxisAlignment.start, children: [ Expanded( child: Hero( tag: 'plant-${plant.id}', child: ClipRRect( borderRadius: const BorderRadius.vertical(top: Radius.circular(20)), child: Image.network( plant.imageUrl, width: double.infinity, fit: BoxFit.cover, errorBuilder: (, __, ___) => Container( alignment: Alignment.center, color: Colors.grey.shade200, child: const Icon(Icons.image_not_supported), ), ), ), ), ), Padding( padding: const EdgeInsets.all(12.0), child: Column( crossAxisAlignment: CrossAxisAlignment.start, children: [ Text( plant.name, maxLines: 1, overflow: TextOverflow.ellipsis, style: const TextStyle(fontWeight: FontWeight.w700), ), const SizedBox(height: 4), Text( plant.type, style: TextStyle(color: Theme.of(context).colorScheme.outline), ), const SizedBox(height: 8), Row( children: [ Text('₹${plant.price.toStringAsFixed(2)}', style: const TextStyle(fontWeight: FontWeight.w700)), const Spacer(), IconButton.filledTonal( onPressed: () {}, icon: const Icon(Icons.add), ), ], ) ], ), ) ], ), ), ); } }

// ----------------------------- DETAILS SCREEN --------------------------------- class DetailsScreen extends StatelessWidget { final Plant plant; const DetailsScreen({super.key, required this.plant});

@override Widget build(BuildContext context) { return Scaffold( body: SafeArea( child: Column( children: [ // Top bar with back & fav Padding( padding: const EdgeInsets.symmetric(horizontal: 12, vertical: 6), child: Row( children: [ IconButton( onPressed: () => Navigator.of(context).pop(), icon: const Icon(Icons.arrow_back_ios_new), ), const Spacer(), IconButton( onPressed: () {}, icon: const Icon(Icons.favorite_border), ), ], ), ), // Hero Image Hero( tag: 'plant-${plant.id}', child: ClipRRect( borderRadius: BorderRadius.circular(24), child: AspectRatio( aspectRatio: 1.2, child: Image.network( plant.imageUrl, fit: BoxFit.cover, errorBuilder: (_, __, ___) => Container( color: Colors.grey.shade200, alignment: Alignment.center, child: const Icon(Icons.image_not_supported), ), ), ), ), ), const SizedBox(height: 16), Expanded( child: Container( padding: const EdgeInsets.fromLTRB(16, 16, 16, 8), decoration: BoxDecoration( color: Theme.of(context).colorScheme.surface, borderRadius: const BorderRadius.vertical(top: Radius.circular(24)), ), child: SingleChildScrollView( child: Column( crossAxisAlignment: CrossAxisAlignment.start, children: [ Row( children: [ Expanded( child: Column( crossAxisAlignment: CrossAxisAlignment.start, children: [ Text( plant.name, style: Theme.of(context) .textTheme .headlineSmall ?.copyWith(fontWeight: FontWeight.w800), ), const SizedBox(height: 4), Text( '${plant.type} • ${plant.category}', style: TextStyle( color: Theme.of(context).colorScheme.outline, ), ), ], ), ), Text( '₹${plant.price.toStringAsFixed(2)}', style: Theme.of(context) .textTheme .titleLarge ?.copyWith(fontWeight: FontWeight.w800), ), ], ), const SizedBox(height: 16), Row( mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [ StatChip(icon: Icons.wb_sunny, label: 'Light', value: plant.light), StatChip(icon: Icons.water_drop, label: 'Water', value: plant.water), StatChip(icon: Icons.thermostat, label: 'Temp', value: plant.temperature, suffix: '°C'), ], ), const SizedBox(height: 16), const Text( 'Description', style: TextStyle(fontWeight: FontWeight.w800, fontSize: 18), ), const SizedBox(height: 8), Text( plant.description, style: Theme.of(context).textTheme.bodyLarge, ), const SizedBox(height: 6), TextButton( onPressed: () {}, child: const Text('Read more'), ), const SizedBox(height: 16), Row( children: [ Expanded( child: FilledButton.icon( onPressed: () {}, icon: const Icon(Icons.shopping_bag), label: const Text('Add to Cart'), ), ), const SizedBox(width: 12), IconButton.filledTonal( onPressed: () {}, icon: const Icon(Icons.share), ), ], ), ], ), ), ), ), ], ), ), ); } }

class StatChip extends StatelessWidget { final IconData icon; final String label; final int value; final String? suffix; const StatChip({ super.key, required this.icon, required this.label, required this.value, this.suffix, });

@override Widget build(BuildContext context) { final isTemp = suffix != null; return Container( padding: const EdgeInsets.symmetric(horizontal: 12, vertical: 10), decoration: BoxDecoration( borderRadius: BorderRadius.circular(16), color: Theme.of(context).colorScheme.surfaceContainer, ), child: Row( children: [ Icon(icon), const SizedBox(width: 8), Column( crossAxisAlignment: CrossAxisAlignment.start, children: [ Text(label, style: TextStyle(color: Theme.of(context).colorScheme.outline)), const SizedBox(height: 2), if (isTemp) Text('$value${suffix!}', style: const TextStyle(fontWeight: FontWeight.w700)) else Row( children: List.generate(5, (i) { final filled = i < value; return Padding( padding: const EdgeInsets.only(right: 2), child: Icon( filled ? Icons.circle : Icons.circle_outlined, size: 12, ), ); }), ), ], ), ], ), ); } }


